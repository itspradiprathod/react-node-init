Backed Files

For Install node js run below command
npm init -y

packages json

  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "start": "nodemon server.js" // added this 
  },

server js

const express = require('express');
const mysql = require('mysql');
const cors = require('cors');


const config = require('./config');

const app = express();
app.use(express.json());
app.use(cors());

const db = mysql.createConnection({
  host: config.DB_HOST,
  user: config.DB_USER,
  password: config.DB_PASSWORD,
  database: config.DB_NAME
});

app.get("/", (req, res) => {
  return res.json("From backend side");
});

// start : in production this code comes from user_route file
app.get("/users", (req, res) => {
  const sql = "SELECT * FROM `user`";
  db.query(sql, (err, data) => {
    if(err) return res.json(err);
    return res.json(data);
  })
});

app.post("/user/add", (req, res) => {
  //console.log(req.body);return false;
  var reqData = req.body;
  const sql = "INSERT INTO `user` SET firstname = '"+reqData.firstname+"', surname = '"+reqData.surname+"', gender = '"+reqData.gender+"', dob = '"+reqData.dob+"', date_added = NOW()";
  //console.log(sql);return false;
  db.query(sql, (err, data) => {
    if(err) return res.json(err);
    //return res.json({success: "Success : User added successfully!"});
    return res.json({success: "valid"});
  })
});
// close : in production this code comes from user_route file

app.listen(7072, () => {
  console.log("Server Listen on Port : 7072");
});
